@using SmartDormitary.Data.Models
@inject SignInManager<User> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<div class="card card-nav-tabs">
    <div class="card-header card-header-primary">
        <div class="nav-tabs-navigation">
            <div class="nav-tabs-wrapper">
                <ul class="nav nav-tabs nav-stacked" data-tabs="tabs">
                    <li class="nav-item">
                        <a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" asp-action="Index"><i class="material-icons">face</i> Profile</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" asp-action="ChangePassword"><i class="material-icons">lock</i> Password</a>
                    </li>
                    @if (hasExternalLogins)
                    {
                        <li class="nav-item">
                            <a class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-action="ExternalLogins"><i class="material-icons">fingerprint</i> External Logins</a>
                        </li>
                    }
                    <li class="nav-item">
                        <a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" asp-action="TwoFactorAuthentication"><i class="material-icons">offline_bolt</i> Two-factor authentication</a>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>